name: Web3 Compatible Tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
  merge_group:
  workflow_dispatch:
    inputs:
      dispatch:
        type: string
        description: "Dispatch contains pr context that want to trigger web3-compatible test"
        required: false

jobs:
  web3-compatible-test:
    strategy:
      matrix:
        # Supported GitHub-hosted runners and hardware resources
        # see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        os: [ubuntu-22.04]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env: 
      IS_DISPATCH: ${{ github.event_name == 'workflow_dispatch' }}
      IS_REGRESSION: ${{ github.event.inputs.dispatch == 'regression' }}

    # When the permissions key is used, all unspecified permissions are set to no access, with the exception of the metadata scope, which always gets read access.
    # See https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      statuses: write

    steps:
      - name: Get the git ref of Axon
        uses: actions/github-script@v6
        id: axon_git_ref
        with:
          script: |
            if (`${{ env.IS_DISPATCH }}` == 'true' && `${{ env.IS_REGRESSION }}` == 'false' && `${{ github.event.inputs.dispatch }}`) {
              const dispatch = JSON.parse(`${{ github.event.inputs.dispatch }}`);
              const prNum = dispatch.issue.number;
              const { data: pullRequest } = await github.rest.pulls.get({
                owner: dispatch.repo.owner,
                repo: dispatch.repo.repo,
                pull_number: dispatch.issue.number,
              });
              return pullRequest.merge_commit_sha;
            }
            return `${{ github.ref }}`;
          result-encoding: string

      - name: Checkout Axon ${{ steps.axon_git_ref.outputs.result}}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.axon_git_ref.outputs.result}}

      - name: Cache of Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build Axon in the development profile
        run: cargo build
      - name: Deploy Local Network of Axon
        run: |
          rm -rf ./devtools/chain/data
          ./target/debug/axon run \
            --config devtools/chain/config.toml \
            --chain-spec devtools/chain/specs/single_node/chain-spec.toml \
            > /tmp/log 2>&1 &

      - name: Checkout gpBlockchain/axon-test
        uses: actions/checkout@v3
        with:
          repository: gpBlockchain/axon-test
          path: axon-test

      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "dir=$(yarn cache dir)" >> ${GITHUB_OUTPUT}
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Node Cache
        uses: actions/cache@v3
        id: npm-and-yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Run axon-test
        working-directory: axon-test
        run: |
          npm install
          npm run test:test --network=axon_test --grep=""

      - name: Check Axon Status
        if: success() || failure()
        run: |
          npx zx <<'EOF'
          import { waitXBlocksPassed } from './devtools/ci/scripts/helper.js'
          await waitXBlocksPassed('http://127.0.0.1:8000', 2);
          EOF
      - name: Publish reports
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: jfoa-build-reports-${{ runner.os }}
          path: axon-test/mochawesome-report/

      # The `statuses: write` permission is required in this step.
      - name: Update the commit Status
        if: always() && env.IS_DISPATCH == 'true' && env.IS_REGRESSION == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.createCommitStatus({
              state: '${{ job.status }}',
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: '${{ github.workflow }}',
              sha: '${{ steps.axon_git_ref.outputs.result}}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
