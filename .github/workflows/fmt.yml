name: Code Format
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dispatch:
        type: string
        description: "Dispatch contains pr context that want to trigger code format"
        required: true

jobs:
  Format:
    runs-on: ubuntu-latest
    outputs:
      output-sha: ${{ steps.escape_multiple_lines_test_inputs.outputs.result }}
    steps:
      - name: Generate axon-bot token
        if: contains(github.event_name, 'workflow_dispatch') &&
            github.repository_owner == 'axonweb3'
        id: generate_axon_bot_token
        uses: wow-actions/use-app-token@v1
        with:
          app_id: ${{ secrets.AXON_BOT_APP_ID }}
          private_key: ${{ secrets.AXON_BOT_PRIVATE_KEY }}
      - name: Event is dispatch
        if: contains(github.event_name, 'workflow_dispatch') &&
            github.repository_owner == 'axonweb3'
        uses: actions/github-script@v6
        id: get_sha
        with:
          github-token: ${{ steps.generate_axon_bot_token.outputs.token }}
          script: |
            const dispatch = JSON.parse(`${{ github.event.inputs.dispatch }}`);
            const pr = (
             await github.rest.pulls.get({
               owner: dispatch.repo.owner,
               repo: dispatch.repo.repo,
               pull_number: dispatch.issue.number,
            })
            ).data.head;
            github.rest.repos.createCommitStatus({
              state: 'pending',
              owner: dispatch.repo.owner,
              repo: dispatch.repo.repo,
              context: '${{ github.workflow }}',
              sha: pr.sha,
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
            return pr.sha
      - name: Escape multiple lines test inputs
        id: escape_multiple_lines_test_inputs
        run: |
          inputs=${{ steps.get_sha.outputs.result}}
          inputs="${inputs//'%'/'%25'}"
          inputs="${inputs//'\n'/'%0A'}"
          inputs="${inputs//'\r'/'%0D'}"
          echo "::set-output name=result::$inputs"
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.escape_multiple_lines_test_inputs.outputs.result || 'main' }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy
          toolchain: nightly

      - name: check-fmt
        run: make check-fmt

      - name: install-cargo-sort
        run: cargo install cargo-sort

      - name: check-sort
        run: make check-sort

  finally:
    name: Finally
    needs: [ Format ]
    if: always() && contains(github.event_name, 'workflow_dispatch')
    runs-on: ubuntu-latest
    steps:
      - name: Generate axon-bot token
        id: generate_axon_bot_token
        uses: wow-actions/use-app-token@v1
        with:
          app_id: ${{ secrets.AXON_BOT_APP_ID }}
          private_key: ${{ secrets.AXON_BOT_PRIVATE_KEY }}
      - if: contains(join(needs.*.result, ';'), 'failure') || contains(join(needs.*.result, ';'), 'cancelled')
        run: exit 1
      - uses: actions/github-script@v6
        if: ${{ always() }}
        with:
          github-token: ${{ steps.generate_axon_bot_token.outputs.token }}
          script: |
            github.rest.repos.createCommitStatus({
              state: '${{ job.status }}',
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: '${{ github.workflow }}',
              sha: '${{ needs.Format.outputs.output-sha }}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
