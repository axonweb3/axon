name: Release

on:
  push:
    tags:
      - v*.*.*

jobs:
  version:
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.version.outputs.tag }}
      major: ${{ steps.version.outputs.major }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: version
        id: version
        run: |
          tag=${GITHUB_REF/refs\/tags\//}
          version=${tag#v}
          major=${version%%.*}
          echo "tag=${tag}" >> $GITHUB_OUTPUT
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "major=${major}" >> $GITHUB_OUTPUT
      - name: Get release
        id: release
        uses: kaliber5/action-get-release@v1
        with:
          token: ${{ github.token }}
          tag_name: ${{ steps.version.outputs.tag }}

  package:
    runs-on: ${{ matrix.job.os }}
    needs:
      - version
    strategy:
      matrix:
        job:
          - os: macos-12
            target: x86_64-apple-darwin
            use-cross: false
            REL_PKG: x86_64-apple-darwin.zip
          - os: [self-hosted, macOS, ARM64]
            target: aarch64-apple-darwin
            use-cross: false
            REL_PKG: aarch64-apple-darwin.zip
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            use-cross: false
            REL_PKG: x86_64-unknown-linux-gnu.tar.gz
    steps:
      - name: Installing Rust toolchain
        if: (!contains(matrix.job.os, 'self-hosted'))
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          profile: minimal
          override: true
      - name: Setup PATH
        if: contains(matrix.job.os, 'self-hosted')
        run: |
          echo /opt/homebrew/bin >> $GITHUB_PATH
          echo /opt/homebrew/sbin >> $GITHUB_PATH
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install Depedencies
        if: contains(matrix.job.os, 'self-hosted')
        run: |
          if ! [ -d /opt/homebrew/opt/openssl@1.1 ]; then
            brew install "openssl@1.1"
          fi
          if ! type -f gpg &> /dev/null; then
            brew install gnupg
          fi
          if ! [ -f "$HOME/.cargo/bin/rustup" ]; then
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Add rust target
        if: (!contains(matrix.job.os, 'self-hosted'))
        run: rustup target add ${{ matrix.job.target }}
      - run: |
          cargo build --release --target ${{ matrix.job.target }}
          rm -rf releases
          mkdir releases
          REL_PKG=${{ matrix.job.REL_PKG}}
          PKG_NAME="axon_${{ needs.version.outputs.tag }}_${REL_PKG%%.*}"
          mkdir "releases/$PKG_NAME"
          cp "target/${{ matrix.job.target }}/release/axon" "releases/$PKG_NAME"
          cp "devtools/chain/config.toml" "releases/$PKG_NAME"
          cp "devtools/chain/default.db-options" "releases/$PKG_NAME"
          cp -r "devtools/chain/specs" "releases/$PKG_NAME"
          cp README.md "releases/$PKG_NAME"
          cp -R docs "releases/$PKG_NAME"
          cp core/api/README.md "releases/$PKG_NAME/docs/rpc.md"
          pushd releases
          if [ "${REL_PKG#*.}" = "tar.gz" ]; then
            tar -czf $PKG_NAME.tar.gz $PKG_NAME
          else
            zip -r $PKG_NAME.zip $PKG_NAME
          fi
          popd
          mv ${{ github.workspace }}/releases/axon_${{ needs.version.outputs.tag }}_${{ matrix.job.REL_PKG}} ${{ github.workspace }}
      - name: upload-zip-file
        uses: actions/upload-artifact@v3
        with:
          name: axon_${{ needs.version.outputs.tag }}_${{ matrix.job.REL_PKG }}
          path: axon_${{ needs.version.outputs.tag }}_${{ matrix.job.REL_PKG }}

  Upload-release-files:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - REL_PKG: x86_64-unknown-linux-gnu.tar.gz
          - REL_PKG: x86_64-apple-darwin.zip
          - REL_PKG: aarch64-apple-darwin.zip
    needs:
      - version
      - package
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare - Download tar
        uses: actions/download-artifact@v4
        with:
          name: axon_${{ needs.version.outputs.tag }}_${{ matrix.REL_PKG }}
      - name: Upload tar assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.version.outputs.upload_url }}
          asset_name: axon_${{ needs.version.outputs.tag }}_${{ matrix.REL_PKG }}
          asset_path: ${{ github.workspace }}/axon_${{ needs.version.outputs.tag }}_${{ matrix.REL_PKG }}
          asset_content_type: application/octet-stream
