name: Axon start test

on:
  push:
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  # Start a single Axon node
  single-node:
    strategy:
      matrix:
        # Supported GitHub-hosted runners and hardware resources
        # see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        os: [ubuntu-22.04]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Cache of Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-cargo-build
    - name: Build Axon in the development profile
      run: |
        # check for AVX2 support by inspecting `/proc/cpuinfo` or running `lscpu`
        # related issue: https://github.com/axonweb3/axon/issues/1387
        lscpu
        # PORTABLE=1 USE_SSE=1 tell rocksdb to target AVX2
        PORTABLE=1 USE_SSE=1 cargo build

    - name: Start a single Axon node
      env:
        LOG_FILE: ${{ runner.temp }}/${{ matrix.os }}-single-axon-node.log
      run: |
        target/debug/axon --version | tee ${{ env.LOG_FILE }}
        target/debug/axon init \
          --config     devtools/chain/config.toml \
          --chain-spec devtools/chain/specs/single_node/chain-spec.toml \
          | tee -a ${{ env.LOG_FILE }}
        target/debug/axon run \
          --config     devtools/chain/config.toml \
          | tee -a ${{ env.LOG_FILE }} &

        npx zx <<'EOF'
        import { waitXBlocksPassed } from './devtools/ci/scripts/helper.js'
        await retry(3, '6s', () => waitXBlocksPassed('http://127.0.0.1:8000', 2))
        EOF
      timeout-minutes: 1

    - name: Archive logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: single-axon-node-logs
        path: |
          ${{ runner.temp }}/${{ matrix.os }}-single-axon-node.log

  multi-nodes:
    strategy:
      matrix:
        # Supported GitHub-hosted runners and hardware resources
        # see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        os: [ubuntu-22.04]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Cache of Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-cargo-build
    - name: Build Axon in the development profile
      run: |
        # check for AVX2 support by inspecting `/proc/cpuinfo` or running `lscpu`
        # related issue: https://github.com/axonweb3/axon/issues/1387
        lscpu
        # PORTABLE=1 USE_SSE=1 tell rocksdb to target AVX2
        PORTABLE=1 USE_SSE=1 cargo build

    - name: Start multiple Axon nodes
      env:
        LOG_PATH: ${{ runner.temp }}/${{ matrix.os }}/multi-axon-nodes
      run: |
        mkdir -p ${{ env.LOG_PATH }}

        target/debug/axon --version

        for id in 1 2 3 4; do
          target/debug/axon init \
            --config     devtools/chain/nodes/node_${id}.toml \
            --chain-spec devtools/chain/specs/multi_nodes_short_epoch_len/chain-spec.toml \
            > ${{ env.LOG_PATH }}/node_${id}.log
        done

        for id in 1 2 3 4; do
          target/debug/axon run \
            --config     devtools/chain/nodes/node_${id}.toml \
            >> ${{ env.LOG_PATH }}/node_${id}.log &
        done

        npx zx <<'EOF'
        import { waitXBlocksPassed } from './devtools/ci/scripts/helper.js'
        await retry(3, '6s', () => Promise.all([
          waitXBlocksPassed('http://127.0.0.1:8001', 4),
          waitXBlocksPassed('http://127.0.0.1:8002', 4),
          waitXBlocksPassed('http://127.0.0.1:8003', 4),
          waitXBlocksPassed('http://127.0.0.1:8004', 4),
        ]))
        EOF
      timeout-minutes: 1

    - name: Archive logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: multi-axon-nodes-logs
        path: |
          ${{ runner.temp }}/${{ matrix.os }}/multi-axon-nodes/
