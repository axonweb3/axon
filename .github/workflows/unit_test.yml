name: Unit Tests
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:
    inputs:
      dispatch:
        type: string
        description: "Dispatch contains pr context that want to trigger unit test"
        required: true

jobs:
  set-output:
    runs-on: ubuntu-latest
    outputs:
      output-sha: ${{ steps.escape_multiple_lines_test_inputs.outputs.result }}
    steps:
      - name: Generate axon-bot token
        if: |
            github.event_name == 'workflow_dispatch' &&
            github.repository_owner == 'axonweb3' && github.event.inputs.dispatch != 'regression'
        id: generate_axon_bot_token
        uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.AXON_BOT_APP_ID }}
          private_key: ${{ secrets.AXON_BOT_PRIVATE_KEY }}
      - name: Event is dispatch
        if: contains(github.event_name, 'workflow_dispatch') &&
            github.repository_owner == 'axonweb3' && github.event.inputs.dispatch != 'regression'
        uses: actions/github-script@v6
        id: get_sha
        with:
          github-token: ${{ steps.generate_axon_bot_token.outputs.BOT_TOKEN }}
          script: |
            const dispatch = JSON.parse(`${{ github.event.inputs.dispatch }}`);
            const pr = (
             await github.rest.pulls.get({
               owner: dispatch.repo.owner,
               repo: dispatch.repo.repo,
               pull_number: dispatch.issue.number,
            })
            ).data.head;
            github.rest.repos.createCommitStatus({
              state: 'pending',
              owner: dispatch.repo.owner,
              repo: dispatch.repo.repo,
              context: '${{ github.workflow }}',
              sha: pr.sha,
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
            return pr.sha
      - name: Escape multiple lines test inputs
        if: contains(github.event_name, 'workflow_dispatch') &&
            github.repository_owner == 'axonweb3' && github.event.inputs.dispatch != 'regression'
        id: escape_multiple_lines_test_inputs
        run: |
          inputs=${{ steps.get_sha.outputs.result}}
          inputs="${inputs//'%'/'%25'}"
          inputs="${inputs//'\n'/'%0A'}"
          inputs="${inputs//'\r'/'%0D'}"
          echo "result=$inputs" >> $GITHUB_OUTPUT
  Test:
    if: |
       (contains(github.event_name, 'workflow_dispatch')) ||
       (contains(github.event_name, 'pull_request') && contains(fromJson('["dependabot[bot]" ]'), github.actor)) ||
       (contains(github.event_name, 'push') && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    needs: set-output
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.set-output.outputs.output-sha }}
      - uses: lyricwulf/abc@v1
        with:
          linux: m4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2

      - name: CI
        run: make test

  Metadata-Test:
    if: |
       (contains(github.event_name, 'workflow_dispatch')) ||
       (contains(github.event_name, 'pull_request') && contains(fromJson('["dependabot[bot]" ]'), github.actor)) ||
       (contains(github.event_name, 'push') && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    needs: set-output
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.set-output.outputs.output-sha }}
      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: CI
        run: make metadata-test

  Crosschain-Test:
    if: |
       (contains(github.event_name, 'workflow_dispatch')) ||
       (contains(github.event_name, 'pull_request') && contains(fromJson('["dependabot[bot]" ]'), github.actor)) ||
       (contains(github.event_name, 'push') && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    needs: set-output
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.set-output.outputs.output-sha }}
      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: CI
        run: make crosschain-test

  finally:
    name: Finally
    if: always() && contains(github.event_name, 'workflow_dispatch') &&
        github.event.inputs.dispatch != 'regression' && github.repository_owner == 'axonweb3'
    needs: [ Test,Metadata-Test,Crosschain-Test,set-output]
    runs-on: ubuntu-latest
    steps:
      - name: Generate axon-bot token
        id: generate_axon_bot_token
        uses: wow-actions/use-app-token@v2
        with:
          app_id: ${{ secrets.AXON_BOT_APP_ID }}
          private_key: ${{ secrets.AXON_BOT_PRIVATE_KEY }}
      - if: contains(join(needs.*.result, ';'), 'failure') || contains(join(needs.*.result, ';'), 'cancelled')
        run: exit 1
      - uses: actions/github-script@v6
        if: ${{ always() }}
        with:
          github-token: ${{ steps.generate_axon_bot_token.outputs.BOT_TOKEN }}
          script: |
            github.rest.repos.createCommitStatus({
              state: '${{ job.status }}',
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: '${{ github.workflow }}',
              sha: '${{ needs.set-output.outputs.output-sha }}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
