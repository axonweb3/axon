name: Unit Tests

on:
  push:
  pull_request:
  merge_group:

# Ensure that only a single job or workflow using the same concurrency group will run at a time.
# see https://docs.github.com/en/actions/using-jobs/using-concurrency#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  # only needs to test the group's latest commit
  cancel-in-progress: true

jobs:
  rust-test:
    strategy:
      matrix:
        # Supported GitHub-hosted runners and hardware resources
        # see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        os: [ubuntu-22.04]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Cache of Cargo
      id: cargo-test-cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}

    - uses: taiki-e/install-action@nextest
    - name: Run Rust unit-test
      run: |
        make test-in-separate-processes
        du -hd1 target/debug/
        echo "reduce the cargo cache size"
        rm -rf target/debug/examples
        rm -rf target/debug/incremental
        du -hd1 target/debug/
        ls -l ~/.cargo/bin/
        rm -f ~/.cargo/bin/cargo-nextest

  other-unit-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
    - name: Run crosschain-test
      run: make crosschain-test
