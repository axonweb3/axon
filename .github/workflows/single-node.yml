# TODO: deprecate axon-start-with-short-genesis.yml
name: Start Single Axon Node

on:
  push:
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  build-and-run:
    strategy:
      matrix:
        os: [ubuntu-20.04] # TODO: test on [ubuntu-22.04, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Cache of Axon binary
        id: axon-bin-cache
        uses: actions/cache@v3
        with:
          path: |
            target/debug/axon
          key: ${{ runner.os }}-${{ runner.arch }}-axon-${{ github.sha }}

      - name: Cargo Cache
        if: steps.axon-bin-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-cargo-

      - name: Cache Axon target directory
        if: steps.axon-bin-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-target-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-cargo-target
      
      - name: Install Rust components
        if: steps.axon-bin-cache.outputs.cache-hit != 'true'
        run: rustup component add rustfmt && rustup component add clippy

      - name: Build Axon
        if: steps.axon-bin-cache.outputs.cache-hit != 'true'
        run: cargo build

      - name: Start a single Axon node
        run: |
          target/debug/axon --version
          target/debug/axon run \
            -c devtools/chain/config.toml \
            -g devtools/chain/genesis_single_node.json \
            > /tmp/single-axon-node.log &
         
          sleep 700
          set +e
          result=$(tail -n 100 /tmp/single-axon-node.log | grep 'state goto new height 200')

          if [[ "$result" != ""]]
          then
              echo "axon chain works well"
          else
              echo "axon chain has some issues, please have a check"
              exit 1
          fi

      # TODO
      # - name: archive log
